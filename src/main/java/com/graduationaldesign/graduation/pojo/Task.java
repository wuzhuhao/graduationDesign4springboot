package com.graduationaldesign.graduation.pojo;

import cn.hutool.core.date.DateUtil;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.graduationaldesign.graduation.pojo.helper.Column;
import com.graduationaldesign.graduation.pojo.helper.MyPrimaryKey;
import com.graduationaldesign.graduation.pojo.helper.Table;
import lombok.Data;

import java.io.Serializable;
import java.util.Date;

@Data
@JsonIgnoreProperties(value = {"handler"})
@Table(value = "t_task")
public class Task implements Serializable {

    /**
     * 表字段 : t_task.id
     */
    @MyPrimaryKey
    @Column(columnName = "id")
    private Integer id;

    /**
     * 任务附件
     * 表字段 : t_task.task_file
     */
    @Column(columnName = "task_file")
    private String taskFile;

    /**
     * 任务状态,，1是待接受，2是已接受
     * 表字段 : t_task.task_state
     */
    @Column(columnName = "task_state")
    private String taskState;

    /**
     * 点击次数
     * 表字段 : t_task.task_number
     */
    @Column(columnName = "task_number")
    private Integer taskNumber;

    /**
     * 课题id，外键对应课题表id
     * 表字段 : t_task.task_sub_id
     */
    @Column(columnName = "task_sub_id", joinPojo = "Subject")
    private String taskSubId;

    /**
     * 回复附件
     * 表字段 : t_task.reply_file
     */
    @Column(columnName = "reply_file")
    private String replyFile;

    /**
     * 任务发布时间
     * 表字段 : t_task.task_time
     */
    @Column(columnName = "task_time")
    private Date taskTime;

    /**
     * 回复时间
     * 表字段 : t_task.reply_time
     */
    @Column(columnName = "reply_time")
    private Date replyTime;

    /**
     * 主要内容
     * 表字段 : t_task.task_content
     */
    @Column(columnName = "task_content")
    private String taskContent;

    /**
     * 基本要求
     * 表字段 : t_task.task_require
     */
    @Column(columnName = "task_require")
    private String taskRequire;

    /**
     * 表字段 : t_task.task_schedule
     */
    @Column(columnName = "task_schedule")
    private String taskSchedule;

    /**
     * 应收集的资料及主要参考文献
     * 表字段 : t_task.task_literature
     */
    @Column(columnName = "task_literature")
    private String taskLiterature;

    /**
     * 回应内容
     * 表字段 : t_task.reply_content
     */
    @Column(columnName = "reply_content")
    private String replyContent;

    private Subject subject;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_task
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取  字段:t_task.id
     *
     * @return t_task.id,
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置  字段:t_task.id
     *
     * @param id the value for t_task.id,
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 任务附件 字段:t_task.task_file
     *
     * @return t_task.task_file, 任务附件
     */
    public String getTaskFile() {
        return taskFile;
    }

    /**
     * 设置 任务附件 字段:t_task.task_file
     *
     * @param taskFile the value for t_task.task_file, 任务附件
     */
    public void setTaskFile(String taskFile) {
        this.taskFile = taskFile == null ? null : taskFile.trim();
    }

    /**
     * 获取 任务状态,，1是待接受，2是已接受 字段:t_task.task_state
     *
     * @return t_task.task_state, 任务状态,，1是待接受，2是已接受
     */
    public String getTaskState() {
        return taskState;
    }

    /**
     * 设置 任务状态,，1是待接受，2是已接受 字段:t_task.task_state
     *
     * @param taskState the value for t_task.task_state, 任务状态,，1是待接受，2是已接受
     */
    public void setTaskState(String taskState) {
        this.taskState = taskState == null ? null : taskState.trim();
    }

    /**
     * 获取 点击次数 字段:t_task.task_number
     *
     * @return t_task.task_number, 点击次数
     */
    public Integer getTaskNumber() {
        return taskNumber;
    }

    /**
     * 设置 点击次数 字段:t_task.task_number
     *
     * @param taskNumber the value for t_task.task_number, 点击次数
     */
    public void setTaskNumber(Integer taskNumber) {
        this.taskNumber = taskNumber;
    }

    /**
     * 获取 课题id，外键对应课题表id 字段:t_task.task_sub_id
     *
     * @return t_task.task_sub_id, 课题id，外键对应课题表id
     */
    public String getTaskSubId() {
        return taskSubId;
    }

    /**
     * 设置 课题id，外键对应课题表id 字段:t_task.task_sub_id
     *
     * @param taskSubId the value for t_task.task_sub_id, 课题id，外键对应课题表id
     */
    public void setTaskSubId(String taskSubId) {
        this.taskSubId = taskSubId == null ? null : taskSubId.trim();
    }

    /**
     * 获取 回复附件 字段:t_task.reply_file
     *
     * @return t_task.reply_file, 回复附件
     */
    public String getReplyFile() {
        return replyFile;
    }

    /**
     * 设置 回复附件 字段:t_task.reply_file
     *
     * @param replyFile the value for t_task.reply_file, 回复附件
     */
    public void setReplyFile(String replyFile) {
        this.replyFile = replyFile == null ? null : replyFile.trim();
    }

    /**
     * 获取 任务发布时间 字段:t_task.task_time
     *
     * @return t_task.task_time, 任务发布时间
     */
    public String getTaskTime() {
        return DateUtil.formatDateTime(taskTime);
    }

    /**
     * 设置 任务发布时间 字段:t_task.task_time
     *
     * @param taskTime the value for t_task.task_time, 任务发布时间
     */
    public void setTaskTime(Date taskTime) {
        this.taskTime = taskTime;
    }

    /**
     * 获取 回复时间 字段:t_task.reply_time
     *
     * @return t_task.reply_time, 回复时间
     */
    public String getReplyTime() {
        return DateUtil.formatDateTime(replyTime);
    }

    /**
     * 设置 回复时间 字段:t_task.reply_time
     *
     * @param replyTime the value for t_task.reply_time, 回复时间
     */
    public void setReplyTime(Date replyTime) {
        this.replyTime = replyTime;
    }

    /**
     * 获取 主要内容 字段:t_task.task_content
     *
     * @return t_task.task_content, 主要内容
     */
    public String getTaskContent() {
        return taskContent;
    }

    /**
     * 设置 主要内容 字段:t_task.task_content
     *
     * @param taskContent the value for t_task.task_content, 主要内容
     */
    public void setTaskContent(String taskContent) {
        this.taskContent = taskContent == null ? null : taskContent.trim();
    }

    /**
     * 获取 基本要求 字段:t_task.task_require
     *
     * @return t_task.task_require, 基本要求
     */
    public String getTaskRequire() {
        return taskRequire;
    }

    /**
     * 设置 基本要求 字段:t_task.task_require
     *
     * @param taskRequire the value for t_task.task_require, 基本要求
     */
    public void setTaskRequire(String taskRequire) {
        this.taskRequire = taskRequire == null ? null : taskRequire.trim();
    }

    /**
     * 获取  字段:t_task.task_schedule
     *
     * @return t_task.task_schedule,
     */
    public String getTaskSchedule() {
        return taskSchedule;
    }

    /**
     * 设置  字段:t_task.task_schedule
     *
     * @param taskSchedule the value for t_task.task_schedule,
     */
    public void setTaskSchedule(String taskSchedule) {
        this.taskSchedule = taskSchedule == null ? null : taskSchedule.trim();
    }

    /**
     * 获取 应收集的资料及主要参考文献 字段:t_task.task_literature
     *
     * @return t_task.task_literature, 应收集的资料及主要参考文献
     */
    public String getTaskLiterature() {
        return taskLiterature;
    }

    /**
     * 设置 应收集的资料及主要参考文献 字段:t_task.task_literature
     *
     * @param taskLiterature the value for t_task.task_literature, 应收集的资料及主要参考文献
     */
    public void setTaskLiterature(String taskLiterature) {
        this.taskLiterature = taskLiterature == null ? null : taskLiterature.trim();
    }

    /**
     * 获取 回应内容 字段:t_task.reply_content
     *
     * @return t_task.reply_content, 回应内容
     */
    public String getReplyContent() {
        return replyContent;
    }

    /**
     * 设置 回应内容 字段:t_task.reply_content
     *
     * @param replyContent the value for t_task.reply_content, 回应内容
     */
    public void setReplyContent(String replyContent) {
        this.replyContent = replyContent == null ? null : replyContent.trim();
    }

    @JsonIgnore
    public Subject getSubject() {
        return subject;
    }

    @JsonGetter(value = "subject")
    public Subject getSubjectDetail() {//自定的方法
        return subject;
    }

    public void setSubject(Subject subject) {
        this.subject = subject;
    }

    @Override
    public String toString() {
        return "Task{" +
                "id=" + id +
                ", taskFile='" + taskFile + '\'' +
                ", taskState='" + taskState + '\'' +
                ", taskNumber=" + taskNumber +
                ", taskSubId='" + taskSubId + '\'' +
                ", replyFile='" + replyFile + '\'' +
                ", taskTime=" + taskTime +
                ", replyTime=" + replyTime +
                ", taskContent='" + taskContent + '\'' +
                ", taskRequire='" + taskRequire + '\'' +
                ", taskSchedule='" + taskSchedule + '\'' +
                ", taskLiterature='" + taskLiterature + '\'' +
                ", replyContent='" + replyContent + '\'' +
                ", subject=" + subject +
                '}';
    }

    public Task() {
    }

    public Task(String taskSubId) {
        this.taskSubId = taskSubId;
    }
}